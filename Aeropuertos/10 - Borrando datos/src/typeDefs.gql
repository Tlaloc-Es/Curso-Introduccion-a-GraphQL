scalar DateTime

"""Esto representa un aeropuerto"""
type Aeropuerto {
  """Esto representar el Identificador de un aeropuerto"""
  id: ID!
  localizacion: String!
  rutas: [Ruta!]!
  aviones: [Avion!]!
}

type Ruta{
  id: ID!
  fechaHoraSalida: DateTime!
  kilometros: Int!
}

type Avion{
  id: ID!
  matricula: String!
  velocidadHora: Int!
  pasajeros: [Pasajero!]!
}

type Pasajero {
  id: ID!
  nombre: String!
  apellido: String!
}

type Query {
  """Retornara la lista de aeropuertos"""
  listarAeropuertos: [Aeropuerto!]!
  obtenerAeropuertoPorId(
    """Identificador de un aeropuerto"""
    id: ID!
    ): Aeropuerto
  obtenerAeropuerto(id: ID, localizacion: String): Aeropuerto
}

type Mutation {
  crearPasajero(idAvion: ID! nombre: String, apellido: String): Pasajero
  actualizarVelocidadHora(idAvion: ID!, velocidadHora: Int): Avion!
  vaciarPasajeros(idAvion: ID!): Avion!
}
